/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package info.ljungqvist.withingscsvgpxconverter

import java.io.File
import java.io.FileInputStream
import java.io.PrintStream
import java.text.DateFormat
import java.text.SimpleDateFormat
import java.util.*
import java.util.zip.ZipInputStream

fun main(args: Array<String>) {
    val inputFileName = args[0]
    val outputDir = args[1]

    var activities: List<Activity>? = null
    var altitudes: List<Value>? = null
    var hrs: List<Value>? = null
    var latitudes: List<Value>? = null
    var longitudes: List<Value>? = null

    ZipInputStream(FileInputStream(inputFileName)).use { zipIn ->
        generateSequence { zipIn.nextEntry }.forEach { entry ->
            val name = entry.name
            println(name)
            when (name) {
                ACTIVITIES_FILE_NAME ->
                    activities = readActivities(zipIn)

                RAW_TRACKER_ALTITUDE_FILE_NAME ->
                    altitudes = readValues(zipIn)

                RAW_TRACKER_HR_FILE_NAME ->
                    hrs = readValues(zipIn)

                RAW_TRACKER_LATITUDE_FILE_NAME ->
                    latitudes = readValues(zipIn)

                RAW_TRACKER_LONGITUDE_FILE_NAME ->
                    longitudes = readValues(zipIn)
            }
            zipIn.closeEntry()
        }
    }

    val outDir = File(outputDir)
    val activitiesWritten =
    generateGpx(activities, altitudes, hrs, latitudes, longitudes)
            ?.map {
                val filename = "${fileNameDataFormat.format(it.points.first().date)}_${it.type}.gpx"
                writeGpx(PrintStream(File(outDir, filename)), it.points)
                filename
            }
            ?.count()
            ?: 0

    println("$activitiesWritten activities written successfully")

}

private const val ACTIVITIES_FILE_NAME = "activities.csv"
private const val RAW_TRACKER_ALTITUDE_FILE_NAME = "raw_location_altitude.csv"
private const val RAW_TRACKER_HR_FILE_NAME = "raw_hr_hr.csv"
private const val RAW_TRACKER_LATITUDE_FILE_NAME = "raw_location_latitude.csv"
private const val RAW_TRACKER_LONGITUDE_FILE_NAME = "raw_location_longitude.csv"

val dataFormat: DateFormat
    get() = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX")

val fileNameDataFormat: DateFormat
    get() = SimpleDateFormat("yyyy-MM-dd'T'HH.mm.ss")
            .apply { timeZone = TimeZone.getTimeZone("GMT") }
